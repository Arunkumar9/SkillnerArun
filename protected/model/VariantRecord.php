<?php
/**
 * Auto generated by prado-cli.php on 2008-09-02 10:12:44.
 */
class VariantRecord extends VariantAR
{
	
	public static $RELATIONS=array
    (
		'product'=>array(self::BELONGS_TO, 'ProductRecord')
    );

    public function getSizeKey()
    {
        return $this->size_x.'x'.$this->size_y.'x'.$this->size_z;
    }

    public function getCoverKey()
    {
        return FU::urlify($this->cover);//str_replace(' ','-',$this->cover);
    }

    public function getSizeText($size=null)
    {
	$size = ($size)?$size: $this->size_x.' x '.$this->size_y;
	if ($this->size_z == 0)
		return $size.' cm';
	else
        	return $size.' x '.$this->size_z.' cm';
    }

	public static function finder($className=__CLASS__)
	{
		return parent::finder($className);
	}
	public function getPriceWithVAT()
	{
		return round($this->Price*(1+$this->vat/100));
	}
	
	public function getSizeType()
	{
		if ($this->size_x && $this->size_y && $this->size_z)
			return 3;
		if ($this->size_x && $this->size_y && $this->size_z == 0)
			return 2;
		if ($this->size_x && $this->size_y == 0 && $this->size_z == 0)
			return 1;

		return 0;
	
	}

	public function getAtypPrice($x,$y)
	{
	    $PAR = Prado::getApplication()->getParameters();
            $price = $this->price;
	    $over = $y - $PAR['longSizeLevel'];
            $c = 1;
	    if ($over > 0)
		$c *= (100+$over)/100;
            if ($x < $PAR['shortSizeLevel'])
		$c *= $PAR['shortSizeDiscount'];
            if ($x > $this->size_x)
            {
                $price = ($this->price / $this->size_x) * ($x + $this->product->type);
            }
	    return round($price*$c);
	}


}
