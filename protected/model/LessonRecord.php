<?php

/**
 * Auto generated by prado-cli.php on 2008-07-11 12:26:36.
 */
class LessonRecord extends VideoRecord {

    public $type=0;
    
    public static function finder($className=__CLASS__) {
        return parent::finder($className);
    }
    
    public function save() {
        $this->type = 0;
        parent::save();
    }
    
  
 
    public static function getTagsGridContextSql() {
    	SWPLogManager::log("It should return the Tags for that particular Users in lesson management window ",array(),TLogger::INFO,$this,"getTagsGridContextSql","SWP");

    	$filter =  Prado::getApplication()->Request['filter'];
    	$filterText =  Prado::getApplication()->Request['searchtext'];
    	$qs = '';
    	
    	if( $filterText ){
			$qs = $qs."( ( uid like '$filterText' ) OR ( name like '$filterText' ) ) AND ";    	
    	}
    	
    	if($filter){
    		$arr = explode(",", $filter);
    		$qs = $qs.str_replace("\n"," "," (''='$filter' OR content_id IN(SELECT vcf.video_id FROM videos_containers vcf");
    		foreach($arr as $k => $v)
	    		if ($v)
	    		{
	    			$tcondition[] = " INNER JOIN videos_containers vc$k on vcf.video_id = vc$k.video_id and vc$k.container_id ='$v' ";
	    		}
    		if (count($tcondition)>0)
   				$tcondition = implode(' ', $tcondition );
   				$qs = $qs.$tcondition.' WHERE (CASE WHEN (SELECT count(video_id) FROM `videos_containers` vcl Where vcf.video_id = vcl.video_id group by video_id ) >= '.count($arr).' THEN 1=1 ELSE 1=2 END) ) ) AND ';
    	}
    	
   		$qs = $qs.self::getNoContextSql();
        
        SWPLogManager::log("Tags of the particular login user are ",array("result"=>$qs),TLogger::INFO,$this,"getTagsGridContextSql","SWP");
   		return $qs;
    }
	
	 public static function getCourseLessonSearchContextSql() {
	   	
	   	$filterArr =  Prado::getApplication()->Request['filter'];
	   	$tagsArr =  Prado::getApplication()->Request['tags'];
	   	$qs = '';
	   	if( $filterArr ){
	   	 	$filterArr =json_decode($filterArr,true);
	   	 	if(is_array($filterArr )){
		   	 		if (!is_array($filterArr )){
		   	 			$filterArr = array($filterArr);
		   	 		}
					foreach($filterArr as $k => $v){
	   	 				if ($v)	{
						   	 $w = str_replace('*','%',$v);
						   	 $condition[] = "($k like '$w')";
	   	 				}
					}
   	 				if (count($condition)>0){
					  $conditions = '('.implode(' OR ', $condition ).')';
   	 				}
					$qs = $qs.$conditions.' AND ';
						
			    //Tag filters
			   	if($tagsArr){
			   	 	$arr = explode(",", $tagsArr);
			   		$qs = $qs.str_replace("\n"," "," (''='$tagsArr' OR content_id IN(SELECT vcf.video_id FROM videos_containers vcf");
			   	
			   	 	foreach($arr as $k => $v){
			   	 		if ($v){
			   	 			$tcondition[] = " INNER JOIN videos_containers vc$k on vcf.video_id = vc$k.video_id and vc$k.container_id ='$v' ";
			   	 		}
			   	 	}
		   	 		if (count($tcondition)>0){
					  $tcondition = implode(' ', $tcondition );
		   	 		}
					$qs = $qs.$tcondition.' WHERE (CASE WHEN (SELECT count(video_id) FROM `videos_containers` vcl Where vcf.video_id = vcl.video_id group by video_id ) >= '.count($arr).' THEN 1=1 ELSE 1=2 END) ) ) AND ';
			   	 	
			   	}
	   	 	}
	   	}
	   	$user = Prado::getApplication()->getUser();
	       $condition_string =  "is_enabled>0 AND type = 0 ".($user->getCompanyID() != null ? (' AND (company_id ='. $user->getCompanyID().')') : ' AND 1=2');
	   	$qs = $qs.$condition_string;
	  //$qs = $qs.self::getNoContextSql();
	  //echo $qs;
	  return $qs;
   	
   }
    public static function getContentTagsGridContextSql() {
    	 
    	SWPLogManager::log("It should retiurn all the tags in the content definition of lesson management window",
    	array("result"=>$result),TLogger::INFO,$this,"getContentTagsGridContextSql","SWP");
    	
    	$user = Prado::getApplication()->getUser()->username;
    	$result = str_replace("\n"," ","(''='%filter%' OR content_id IN ( SELECT video_id FROM videos_containers vc WHERE vc.container_id in(0%filter%))) AND ").
    	self::getCourseGridContextSql('content_id');
    	
    	SWPLogManager::log("Tags of the particular login user in the course content definition of Lesson Management Window are",
    	array("result"=>$result),TLogger::INFO,$this,"getContentTagsGridContextSql","SWP");
    	
    	return $result;
    }

    public static function getCourseGridContextSql($filterName=false) {
    	$user = Prado::getApplication()->getUser();
        
        // While showing the quizes in course content grid we are filtering based on the company id.
        SWPLogManager::log("It should returns all the lesson of the particular login user in the course content definition",array("user"=>$user, "filterName"=>$filterName),TLogger::INFO,$this,"getCourseGridContextSql","SWP");
        
        $str = ($user->getCompanyID() != null ? (" AND (company_id =". $user->getCompanyID().")") : " AND 1=2");
        $res = str_replace("\n"," ","content_id IS NOT NULL AND type = 0  $str ");
        if ($filterName) {
            $sreq = Prado::getApplication()->getRequest();
            $res = str_replace('%filter%',$sreq[$filterName],$res);
        }
        
       /**
		 * Earlier this was the additional condition we have used for filtering the data in content definition. 
	 	**/ 
//                (
//                    user_id IN ( SELECT rec FROM (SELECT user_id as rec FROM products p WHERE p.content_id = '%filter%') t)
//                    OR
//                    (
//                        is_finished>0 AND
//                        user_id IN (SELECT uz1.be_user_id FROM products p, be_users_zones uz, be_users_zones uz1
//                                                                         WHERE p.content_id = '%filter%' AND p.user_id = uz.be_user_id
//                                                                         AND uz.zone_id = uz1.zone_id  )
//                    )
//                )
    	 SWPLogManager::log("The lessons in the content definition are : ",array("result"=>$res),TLogger::INFO,$this,"getCourseGridContextSql","SWP");
    	 return $res;
    }
    
    public static function getNoContextSql() {
    	
    	SWPLogManager::log("It should return the condition string based on which lesson will filter",array("user"=>$user),TLogger::INFO,$this,"getNoContextSql","SWP");
    	
        $user = Prado::getApplication()->getUser();
    	$request =  Prado::getApplication()->Request;
    	$str="";
    	if( $request['view'] && $request['view'] == 'my-lesson-view' ){
    		$str = " AND user_id ='".$user->username."' ";
    	}
        $condition_string =  "is_enabled>0 AND type = 0 ".$str." ".($user->getCompanyID() != null ? (' AND (company_id ='. $user->getCompanyID().')') : ' AND 1=2');
        
        SWPLogManager::log("Condition string based on which lessons will filter is ",array("condition"=>$condition_string),TLogger::INFO,$this,"getNoContextSql","SWP");
    	
        return $condition_string;
    }

    public function getSecurityView()
    {
    	SWPLogManager::log("It should return the status of the lesson (based on which front end will decide which button to be enable or disable)",
    	array("user"=>$user),TLogger::INFO,$this,"getSecurityView","SWP");
         $user = Prado::getApplication()->getUser();
         if ( $this->is_finished ) {
                $s = new stdClass();
                $s->name = "LessonRecord.video-form-save-button.disable";
                $sec[] = $s;
                $s = new stdClass();
                $s->name = "LessonRecord.video-form-finalize-button.disable";
                $sec[] = $s;
                $s = new stdClass();
                $s->name = "LessonRecord.video-form-cancel-button.disable";
                $sec[] = $s;
                $s = new stdClass();
                $s->name = "LessonRecord.lesson-import-chapters-button.disable";
                $sec[] = $s;
                $s = new stdClass();
                $s->name = "LessonRecord.chapters-grid-toolbar.hide";
                $sec[] = $s;
                $s = new stdClass();
                $s->name = "LessonRecord.markercuepoints-grid-toolbar.hide";
                $sec[] = $s;
                SWPLogManager::log("Status of the lesson (it is finalized) ",array("result"=>$sec),TLogger::INFO,$this,"getSecurityView","SWP");
                return $sec;
         }
         else {
                $s = new stdClass();
                $s->name = "LessonRecord.chapters-grid-toolbar.show";
                $sec[] = $s;
                $s = new stdClass();
                $s->name = "LessonRecord.markercuepoints-grid-toolbar.show";
                $sec[] = $s;
                $s = new stdClass();
                $s->name = "LessonRecord.video-form-save-button.enable";
                $sec[] = $s;
                $s = new stdClass();
                $s->name = "LessonRecord.video-form-finalize-button.enable";
                $sec[] = $s;
                $s = new stdClass();
                $s->name = "LessonRecord.video-form-cancel-button.enable";
                $sec[] = $s;
                $s = new stdClass();
                $s->name = "LessonRecord.lesson-import-chapters-button.enable";
                $sec[] = $s;
                SWPLogManager::log("Status of the lesson (not yet finalized)",array("result"=>$sec),TLogger::INFO,$this,"getSecurityView","SWP");
                return $sec;
         }
         return parent::getSecurityView();
    }
        
}