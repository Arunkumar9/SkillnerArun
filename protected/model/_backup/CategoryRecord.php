<?php
/**
 * Auto generated by prado-cli.php on 2008-07-10 10:54:44.
 */
class CategoryRecord extends CategoryAR implements FTypedActiveRecord
{
    const DETAIL_PAGE = 'ShopCategoryPage';
	protected $_typedata;
	
	public static $RELATIONS=array
    (
        'children' => array(self::HAS_MANY, 'CategoryRecord', 'parent_id'),
        'parent' => array(self::BELONGS_TO, 'CategoryRecord', 'parent_id'),
		'products'=>array(self::MANY_TO_MANY, 'ProductsRecord', 'products_categories')
    );


	public static function finder($className=__CLASS__)
	{
		return parent::finder($className);
	}

	public function getIsFolder() 
	{
		return $this->is_folder;
	}
	
	public function setIsFolder($value) 
	{
		$this->is_folder = $value;
	}
	
    public function getSortName() 
    {
        if ($this->name == 'Recycle Bin')
            return 'zzzzzzzzzzzzzz';
        else    
            return $this->name;
    }
    
    public function getMenuType() 
    {
        if ($this->name == 'Recycle Bin')
            return 'recycleBin';
        elseif ($this->is_folder)
            return 'folder';
        else    
            return 'any';
    }

    public function getNodeType() 
    {
        if ($this->uid == 1)
            return 'recycleBin';
        elseif ($this->is_folder)
            return 'folder';
        else    
            return 'leaf';
    }

    public function getSortLeaf() 
    {
        if ($this->name == 'Recycle Bin')
            return true;
        else
            return !$this->is_folder;
    }

	public function getType() 
	{
		$types = TypeRecord::getTypes();
		return $types[self::DETAIL_PAGE];
	}

	public function getCatID()
	{
		return $this->uid;
	}	
	public function getTypeData($inherit = false)
	{
		
		if ($this instanceof FTypedActiveRecord)
		{
			if ($this->_typedata === null)
			{
				if ($inherit) {
						$parent = $this->parent;
						$typeData = $parent->type->data+$this->type->data;
				} else {
						$typeData = $this->type->data;
				}
				$typeData['name'] = $this->type->name;
				$this->_typedata = $typeData;
			}
			return $this->_typedata;
			
		} else {
			return array();
		}
	}
	
	public function setTypeData($key, $value)
	{
		if ($this instanceof FTypedActiveRecord && $key)
		{
			$this->type->data[$key] = $value;
		}	
	}
	
	public function unsetTypeData($key)
	{
		if ($this instanceof FTypedActiveRecord && $key)
		{
			unset($this->type->data[$key]);
		}	
	}

}
