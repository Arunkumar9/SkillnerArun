/*
 * Copyright Â© Atomic Inc 2007-2008
 * http://jsorm.com
 *
 * This file contains work that is copyrighted and is distributed under one of several licenses. 
 * You may not use, modify or distribute this work, except under an approved license. 
 * Please visit the Web site listed above to obtain the original work and a license.
 */


Ext.ux.HttpWriteProxy=Ext.extend(Ext.data.HttpProxy,{constructor:function(conn){this.superclass=Ext.ux.HttpWriteProxy.superclass;this.addEvents('beforeupdate','updateexception','update');this.superclass.constructor.call(this,conn);},update:function(params,callback,scope,arg){if(this.fireEvent("beforeupdate",this,params)!==false){var o={params:params||{},request:{callback:callback,scope:scope,arg:arg},callback:this.updateResponse,method:'POST',scope:this};if(this.useAjax){Ext.applyIf(o,this.conn);if(this.activeRequest){Ext.Ajax.abort(this.activeRequest);}
this.activeRequest=Ext.Ajax.request(o);}else{this.conn.request(o);}}else{callback.call(scope||this,arg,false,null);}},updateResponse:function(o,success,response){delete this.activeRequest;if(!success){this.fireEvent("updateexception",this,o,response);o.request.callback.call(o.request.scope,o.request.arg,false,response);return;}
this.fireEvent("update",this,o,o.request.arg);o.request.callback.call(o.request.scope,o.request.arg,true,response);}});Ext.ux.JsonWriterReader=Ext.extend(Ext.data.JsonReader,{constructor:function(meta,recordType){this.superclass=Ext.ux.JsonWriterReader.superclass;meta=meta||{};this.superclass.constructor.call(this,meta,recordType||meta.fields);},write:function(records){var obj={};obj[this.meta.root]=records;if(this.serverMeta){obj['metaData']=this.serverMeta;}
var j=Ext.util.JSON.encode(obj);if(!j){throw{message:"JsonWriter.write: unable to encode records into Json"};}
return(j);},readRecords:function(o){if(o.metaData){this.serverMeta=o.metaData;}else{delete this.serverMeta;}
return(this.superclass.readRecords.call(this,o));}});Ext.ux.ObjectReader=Ext.extend(Ext.data.DataReader,{constructor:function(meta,recordType){this.superclass=Ext.ux.ObjectReader.superclass;meta=meta||{};this.superclass.constructor.call(this,meta,recordType||meta.fields);},read:function(response){var o=response;if(!o){throw{message:"ObjectReader.read: object not found"};}
if(o.metaData){delete this.ef;this.meta=o.metaData;this.recordType=Ext.data.Record.create(o.metaData.fields);this.onMetaChange(this.meta,this.recordType,o);}
return this.readRecords(o);},onMetaChange:function(meta,recordType,o){},simpleAccess:function(obj,subsc){return obj[subsc];},clone:function(o){if(o==null)return o;var n=null;var t=typeof(o);if(o instanceof Array){n=new Array();for(var i=0;i<o.length;i++)
n[i]=this.clone(o[i]);}else if(o instanceof Object){var n=new Object();for(var i in o){n[i]=this.clone(o[i]);}}else{n=o;}
return n;},readRecords:function(o){o=this.clone(o);this.objectData=o;var s=this.meta,Record=this.recordType,f=Record.prototype.fields,fi=f.items,fl=f.length;var getId=function(){return(null)};if(this.meta.id){var idField=this.meta.id;getId=function(r){return(rec[idField]);}}
var records=[];for(var i=0;i<o.length;i++){var record=new Record(o[i],getId(o[i]));records[i]=record;}
return{success:true,records:records,totalRecords:records.length};},write:function(records){return(this.clone(records));}});Ext.ux.StoreProxy=Ext.extend(Ext.data.DataProxy,{constructor:function(config){this.superclass=Ext.ux.StoreProxy.superclass;this.superclass.constructor.call(this);config=config||{};this.sourceStore=config.store;this.sourceField=config.field;this.addEvents({'beforeupdate':true,'updateexception':true,'update':true});},load:function(params,reader,callback,scope,arg){params=params||{};var result;try{var record=this.sourceStore.getById(params.id);if(record!=null&&record!=undefined){this.loadId=params.id;var data=record.get(this.sourceField);result=reader.readRecords(data);}}catch(e){this.loadId=null;this.fireEvent("loadexception",this,arg,null,e);callback.call(scope,null,arg,false);return;}
callback.call(scope,result,arg,true);},reconfig:function(config){this.sourceStore=config.store;this.sourceField=config.field;},update:function(params,callback,scope,arg){if(this.fireEvent("beforeupdate",this,params)!==false){try{var record=this.sourceStore.getById(this.loadId);if(record!=null&&record!=undefined){var s=Ext.util.JSON.encode(params.data);params.data.toString=function(){return(s)}
record.set(this.sourceField,params.data);}else{throw"No record matches id "+this.loadId;}}catch(e){this.fireEvent("updateexception",this,arg,null,e);callback.call(scope,params,null,{responseText:e.message});return;}
this.fireEvent("update",this,arg);callback.call(scope,params,true,{responseText:'SUCCESS'});}else{callback.call(scope||this,true,params,{responseText:'beforeevent prevented update'});}}});Ext.ux.WriteRecord=Ext.extend(Ext.data.Record,{constructor:function(config){this.superclass=Ext.ux.WriteRecord.superclass;Ext.apply(config,this);return(config);},_type:'Ext.ux.WriteRecord',journal:[],tmpEdits:0,modCount:{},getEdits:function(){var e=this.journal.slice(-this.tmpEdits);this.tmpEdits=0;return(e);},set:function(name,value,silent){if(!silent){this.journal.push({name:name,old:this.get(name),'new':value});this.tmpEdits++;}
if(!this.modCount[name])
this.modCount[name]=0;this.modCount[name]++;this.superclass.set.call(this,name,value);},reject:function(silent,count){if(!count||count==0||count>=this.journal.length){this.journal.splice(0);this.modCount={};this.superclass.reject.call(this,silent);}else{var e=this.journal.splice(-count).reverse();for(var i=0;i<e.length;i++){var n=e[i].name;this.data[n]=e[i].old;this.modCount[n]--;if(this.modCount[n]<=0)
delete this.modified[e[i].name];}}}});Ext.ux.WriteStore=Ext.extend(Ext.data.Store,{constructor:function(config){this.myclass=Ext.ux.WriteStore;this.modes=this.myclass.modes;this.types=this.myclass.types;this.superclass=this.myclass.superclass;this.superclass.constructor.call(this,config);this.modes=this.myclass.modes;this.types=this.myclass.types;this.updates=this.myclass.updates;this.addEvents('beforewrite','write','writeexception','commit');if(this.updateProxy){this.relayEvents(this.updateProxy,["updateexception"]);}
this.on('load',function(){this.journal=[];});this.defaultWriteMode=this.modes.update;this.defaultUpdateMode=false;},journal:[],maxId:0,replaceWrite:false,updateProxy:null,dup:function(target,source,deep){target=target||{};for(var prp in source){target[prp]=source[prp];}
return(target);},loadRecords:function(o,options,success){if(o&&o.records){this.decorateRecords(o.records);}
this.superclass.loadRecords.call(this,o,options,success);},decorateRecords:function(r){r=[].concat(r);for(var i=0;i<r.length;i++){var rec=r[i];if((typeof(rec)).toLowerCase()=='object'&&(!rec._type||rec._type!="Ext.ux.WriteRecord")){new Ext.ux.WriteRecord(rec);}}},write:function(options){if(this.fireEvent('beforewrite',this,options)!=false){var mode=this.getMode(options);options.mode=mode;var records=this.writeRecords(mode);var params={data:this.reader.write(records),mode:mode}
this.updateProxy.update(params,this.writeHandler,this,options);}},getMode:function(options){options=options||{};if(options.replace)
options.mode=this.modes.replace;if(this.replaceWrite)
this.writeMode=this.modes.replace;var mode;if(options.mode){mode=options.mode;}else if(this.writeMode){mode=this.writeMode;}else if(options.replace){mode=this.modes.replace;}else if(this.replaceWrite){this.writeMode=this.modes.replace;mode=this.modes.replace;}else{mode=this.defaultWriteMode;}
return(mode);},writeRecords:function(mode){var data=[];var tmp;var idField=this.reader.meta.id;if(mode==this.modes.replace){var rs=this.data.getRange(0);for(var i=0;i<rs.length;i++){var elm=rs[i];if(elm!=null){data[i]=elm.data;}
if(idField){data[i][idField]=elm.id;}}}else{var recs={};for(var i=0;i<this.journal.length;i++){var entry=this.journal[i];var recId=entry.record.id;if(entry!=null){var details='';if(mode==this.modes.condensed&&recs[recId]!=undefined){var idx=recs[recId];switch(entry.type){case this.types.change:var lastType=data[idx].type;if(lastType==this.types.change){data[idx].data=data[idx].data.concat(entry.data);}else if(lastType==this.types.add){for(var j=0;j<entry.data.length;j++){data[idx].data[entry.data[j].name]=entry.data[j]['new'];}}else if(lastType==this.types.remove){}
break;case this.types.add:break;case this.types.remove:data[idx]={type:entry.type,data:entry.data}
break;}}else{recs[recId]=i;data[i]={type:entry.type,data:entry.data,rid:entry.record.id};if(idField){data[i][idField]=entry.record.id;}}}}}
return(data);},writeHandler:function(o,success,response){if(success){if(this.fireEvent('write',this,o,response)!=false){var update=false;if(o.update){update=o.update;}else if(this.updateMode){update=this.updateMode;}else{update=this.defaultUpdateMode;}
if(update){var r=this.reader.read(response);if(o.mode==this.modes.replace||update==this.updates.replace){this.loadRecords(r,options,true);}else{for(var i=0;i<r.totalRecords;i++){var newRec=r.records[i];var rid=10;var oldRec=this.getById(rid);if(rid!=undefined&&oldRec){var nullfield=0;for(var field in newRec.data){oldRec.data[field]=newRec.data[field];if(newRec.data[field]==null||newRec.data[field]==undefined){nullfield++;}}
if(newRec.data.length==0||newRec.data.length==nullfield){this.remove(oldRec);}}else{this.add([newRec]);}}}}
var m=this.journal.slice(0);for(var i=0,len=m.length;i<len;i++){if(m[i].type==this.types.change){m[i].record.commit(m[i].record._deleted);}}
this.journal=[];if(o.update||this.updateResponse){}
if(o.success&&typeof(o.success)=='function'){o.success.call(this,o,response);}
this.fireEvent("commit",this,o,response);}else{if(o.failure&&typeof(o.failure)=='function'){o.processfailure.call(this,o,response);}}}else{this.fireEvent("writeexception",this,o,response);if(o.failure&&typeof(o.failure)=='function'){o.writefailure.call(this,o,response);}}},add:function(records){records=[].concat(records);this.decorateRecords(records);for(var i=0,len=records.length;i<len;i++){records[i].join(this);}
var index=this.data.length;this.data.addAll(records);for(var i=0;i<records.length;i++){this.journal.push({type:this.types.add,index:index+i,record:records[i],data:this.dup(records[i].data)});}
this.fireEvent("add",this,records,index);},remove:function(record){var index=this.data.indexOf(record);this.data.removeAt(index);record._deleted=true;this.journal.push({type:this.types.remove,index:index,record:record,data:''});this.fireEvent("remove",this,record,index);},removeAll:function(){for(var i=0,len=this.data.getCount();i<len;i++){this.journal.push({type:this.types.remove,index:i,record:this.data[i],data:''});}
this.data.clear();this.fireEvent("clear",this);},insert:function(index,records){records=[].concat(records);this.decorateRecords(records);for(var i=0,len=records.length;i<len;i++){this.data.insert(index,records[i]);records[i].join(this);}
for(var i=0;i<records.length;i++){this.journal.push({type:this.types.add,index:index+i,record:records[i],data:this.dup(records[i].data)});}
this.fireEvent("add",this,records,index);},getModifiedCount:function(){return(this.journal.length);},isDirty:function(){return(this.journal.length>0);},commitChanges:function(options){options=options||{};if(this.updateProxy!=null){this.write(options);}else{this.journal.splice(0);this.fireEvent("commit",this,options);}},rejectChanges:function(count){if(!count||count>=this.journal.length){count=0;}
var m=this.journal.splice(-count).reverse();for(var i=0,len=m.length;i<len;i++){var jType=m[i].type;if(jType==this.types.change){m[i].record.reject(true,m[i].data.length);this.fireEvent("update",this,m[i].record,Ext.data.Record.REJECT);}else if(jType==this.types.add){this.superclass.remove.call(this,m[i].record);}else if(jType==this.types.remove){delete m[i].record._deleted;this.superclass.insert.call(this,m[i].index,m[i].record);}}},afterEdit:function(record){var edits=record.getEdits();if(edits&&edits.length>0){this.journal.push({type:this.types.change,index:this.data.indexOf(record),record:record,data:edits});}
this.fireEvent("update",this,record,Ext.data.Record.EDIT);},afterReject:function(record){for(var i=this.journal.length-1;i>=0;i++){if(this.journal[i].type==this.types.change&&this.journal[i].record==record){this.journal=this.journal.splice(i,1);break;}}
this.fireEvent("update",this,record,Ext.data.Record.REJECT);},afterCommit:function(record){this.fireEvent("update",this,record,Ext.data.Record.COMMIT);},getNextId:function(){return(this.getMaxId()+1);},getMaxId:function(){var maxId=1000;if(this.data!=null){var records=this.data.getRange(0);for(var i=0;i<records.length;i++){if(records[i].id>maxId)
maxId=records[i].id;}}
return(maxId);}});Ext.apply(Ext.ux.WriteStore,{modes:{replace:'r',update:'u',condensed:'c'},updates:{replace:'r',update:'u'},types:{change:'u',add:'c',remove:'d'}});Ext.ux.XmlWriterReader=Ext.extend(Ext.data.XmlReader,{constructor:function(meta,recordType){this.superclass=Ext.ux.XmlWriterReader.superclass;meta=meta||{};this.superclass.constructor.call(this,meta,recordType||meta.fields);},write:function(records){}});